{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "keyVaultName": {
      "type": "string",
      "metadata": {
        "description": "Name of the Vault"
      }
    },
     "keyVaultBackupName": {
      "type": "string",
      "metadata": {
        "description": "Name of the Vault"
      }
    },
    "tenantId": {
      "type": "string",
      "defaultValue": "[subscription().tenantId]",
      "metadata": {
        "description": "Tenant Id of the subscription. Get using Get-AzureRmSubscription cmdlet or Get Subscription API"
      }
    },
    "objectIdForBackup": {
      "type": "string",
      "metadata": {
        "description": "Object Id of the SP that will be used by Azure Backup. Get objectId using 'az ad sp list --display-name 'Backup Management Service'''"
      }
    },
    "objectIdForDeployment": {
      "type": "string",
      "metadata": {
        "description": "Object Id of the SP that will be used by Azure DevOps to execute deployments. Determine which service connection is used and then fetch the objectId in Azure Active Directory"
      }
    },
    "skuName": {
      "type": "string",
      "defaultValue": "Standard",
      "allowedValues": [
        "Standard",
        "Premium"
      ],
      "metadata": {
        "description": "SKU for the vault"
      }
    },
    "enableVaultForDeployment": {
      "type": "bool",
      
      "allowedValues": [
        true,
        false
      ],
      "metadata": {
        "description": "Specifies if the vault is enabled for a VM deployment"
      }
    },
    "enableVaultForDiskEncryption": {
      "type": "bool",
      
      "allowedValues": [
        true,
        false
      ],
      "metadata": {
        "description": "Specifies if the azure platform has access to the vault for enabling disk encryption scenarios."
      }
    },
    "enabledForTemplateDeployment": {
      "type": "bool",
     
      "allowedValues": [
        true,
        false
      ],
      "metadata": {
        "description": "Specifies whether Azure Resource Manager is permitted to deploy the template in the key vault."
      }
    },
  "virtualNetworkRG": {
            "type": "String",
            "metadata": {
                "description": "Name of the vnet rg"
            }
        },
   "vnetName": {
      "type": "string",

      "metadata": {
        "description": "Name of the Virtual Network"
      }
    },
    "testSubnetName": {
      "type": "string",
     
      "metadata": {
        "description": "Name of the Management Subnet"
      }
    },
     "gatewaySubnetName": {
      "type": "string",
      "defaultValue": "GatewaySubnet",
      "metadata": {
        "description": "Name of the Gateway Subnet"
      }
    },
   
   
    
    
   
    "appgatewaySubnetName": {
      "type": "string",
      
      "metadata": {
        "description": "Name of the application Gateway Subnet"
      }
    },
    "webSubnetName": {
      "type": "string",
     
      "metadata": {
        "description": "Name of the Web-DMZ Subnet"
      }
    },
    "appSubnetName": {
      "type": "string",
      
      "metadata": {
        "description": "Name of the App Subnet"
      }
    },
    "dbSubnetName": {
      "type": "string",
     
      "metadata": {
        "description": "Name of the DB Subnet"
      }
    },
    "adSubnetName": {
      "type": "string",
     
      "metadata": {
        "description": "Name of the AD Subnet"
      }
    },
   
    "ImgSubnetName": {
      "type": "string",
      
      "metadata": {
        "description": "Name of the Management Subnet"
      }
    },
    "UtilitySubnetName": {
      "type": "string",
      
      "metadata": {
        "description": "Name of the Utility Subnet"
      }
    },
    "taggingApplicationvalue": {
      "type": "string",
      "defaultValue": "AirVault DEV",
      "metadata": {
        "description": "Tagging value of the Application Name"
      }
    },
    "tagginguaivalue": {
      "type": "string",
      "defaultValue": "uai3026608",
      "metadata": {
        "description": "Tagging value of the Unique Application Identifier"
      }
    },
    "taggingenvvalue": {
      "type": "string",
      "defaultValue": "dev",
      "metadata": {
        "description": "Tagging value of the environment"
      }
    },
    "taggingcontactvalue": {
      "type": "string",
      "defaultValue": "Airvaultopsengineering@ge.com",
      "metadata": {
        "description": "Tagging value of the point of contact"
      }
    },
    "taggingpreservevalue": {
      "type": "string",
      "defaultValue": "TRUE",
      "metadata": {
        "description": "Tagging value of the preserver"
      }
    }
    
   
  },
   "variables": {
        "subnets":{
        "websubnetref": "[concat(resourceId(parameters('virtualNetworkRG'), 'Microsoft.Network/virtualNetworks', parameters('vnetname')) , '/subnets/' , parameters('websubnetname'))]",
        "appsubnetref": "[concat(resourceId(parameters('virtualNetworkRG'), 'Microsoft.Network/virtualNetworks', parameters('vnetname')) , '/subnets/' , parameters('appsubnetname'))]",
        "dbsubnetref": "[concat(resourceId(parameters('virtualNetworkRG'), 'Microsoft.Network/virtualNetworks', parameters('vnetname')) , '/subnets/' , parameters('dbsubnetname'))]",   
        "adsubnetref": "[concat(resourceId(parameters('virtualNetworkRG'), 'Microsoft.Network/virtualNetworks', parameters('vnetname')) , '/subnets/' , parameters('adsubnetname'))]",
        "imgsubnetref": "[concat(resourceId(parameters('virtualNetworkRG'), 'Microsoft.Network/virtualNetworks', parameters('vnetname')) , '/subnets/' , parameters('imgsubnetname'))]",
        "testsubnetref": "[concat(resourceId(parameters('virtualNetworkRG'), 'Microsoft.Network/virtualNetworks', parameters('vnetname')) , '/subnets/' , parameters('testsubnetname'))]",
        "agwsubnetref": "[concat(resourceId(parameters('virtualNetworkRG'), 'Microsoft.Network/virtualNetworks', parameters('vnetname')) , '/subnets/' , parameters('AppgatewaySubnetName'))]",
        "gatewaysubnetref": "[concat(resourceId(parameters('virtualNetworkRG'), 'Microsoft.Network/virtualNetworks', parameters('vnetname')) , '/subnets/' , parameters('gatewaySubnetName'))]",
        "utilitysubnetref": "[concat(resourceId(parameters('virtualNetworkRG'), 'Microsoft.Network/virtualNetworks', parameters('vnetname')) , '/subnets/' , parameters('UtilitySubnetName'))]"

    }
    },
  "resources": [
    {
      "type": "Microsoft.KeyVault/vaults",
      "name": "[parameters('keyVaultName')]",
      "apiVersion": "2018-02-14",
      "location": "[resourceGroup().location]",
      "tags": {
        "ApplicationName": "[parameters('taggingApplicationvalue')]",
        "uai": "[parameters('tagginguaivalue')]",
        "env": "[parameters('taggingenvvalue')]",
        "SupportEmail": "[parameters('taggingcontactvalue')]",
        "preserve": "[parameters('taggingpreservevalue')]"
      },
      "properties": {
        "enabledForDeployment": "[parameters('enableVaultForDeployment')]",
        "enabledForDiskEncryption": "[parameters('enableVaultForDiskEncryption')]",
        "enabledForTemplateDeployment": "[parameters('enabledForTemplateDeployment')]",
        "tenantId": "[parameters('tenantId')]",



        "accessPolicies": [
          {
            "tenantId": "[parameters('tenantId')]",
            "objectId": "[parameters('objectIdForDeployment')]",
            "permissions": {
              "keys": [
                "all"
              ],
              "secrets": [
                "all"
              ],
              "certificates": [
                "all"
              ]
            }
          },
          {
            "tenantId": "[parameters('tenantId')]",
            "objectId": "[parameters('objectIdForBackup')]",
            "permissions": {
              "keys": [
                "all"
              ],
              "secrets": [
                "all"
              ],
              "certificates": [
                "all"
              ]
            }
          }

        ],
        "sku": {
          "name": "[parameters('skuName')]",
          "family": "A"

        },
         "networkAcls": {

            "defaultAction": "Deny",
            "bypass": "AzureServices",
            "virtualNetworkRules": [
              {
                "id": "[variables('subnets').websubnetref]"
              },
              {
                "id": "[variables('subnets').appsubnetref]"
              },
              {
                "id": "[variables('subnets').dbsubnetref]"
              },
              {
                "id": "[variables('subnets').adsubnetref]"
              },
              {
                "id": "[variables('subnets').imgsubnetref]"
              },
              {
                "id": "[variables('subnets').testsubnetref]"
              },
              {
                "id": "[variables('subnets').agwsubnetref]"
              },
              {
                "id": "[variables('subnets').gatewaysubnetref]"
              },
              {
                "id": "[variables('subnets').utilitysubnetref]"
              }
            ]


          }
      }
    },
      {
      "type": "Microsoft.KeyVault/vaults",
      "name": "[parameters('keyVaultBackupName')]",
      "apiVersion": "2018-02-14",
      "location": "[resourceGroup().location]",
      "tags": {
        "ApplicationName": "[parameters('taggingApplicationvalue')]",
        "uai": "[parameters('tagginguaivalue')]",
        "env": "[parameters('taggingenvvalue')]",
        "SupportEmail": "[parameters('taggingcontactvalue')]",
        "preserve": "[parameters('taggingpreservevalue')]"
      },
      "properties": {
        "enabledForDeployment": "[parameters('enableVaultForDeployment')]",
        "enabledForDiskEncryption": "[parameters('enableVaultForDiskEncryption')]",
        "enabledForTemplateDeployment": "[parameters('enabledForTemplateDeployment')]",
        "tenantId": "[parameters('tenantId')]",



        "accessPolicies": [
          {
            "tenantId": "[parameters('tenantId')]",
            "objectId": "[parameters('objectIdForDeployment')]",
            "permissions": {
              "keys": [
                "all"
              ],
              "secrets": [
                "all"
              ],
              "certificates": [
                "all"
              ]
            }
          },
          {
            "tenantId": "[parameters('tenantId')]",
            "objectId": "[parameters('objectIdForBackup')]",
            "permissions": {
              "keys": [
                "all"
              ],
              "secrets": [
                "all"
              ],
              "certificates": [
                "all"
              ]
            }
          }

        ],
        "sku": {
          "name": "[parameters('skuName')]",
          "family": "A"

        }

      }
    }
   
  ]
}